 # Списки, словари, кортежи, множества. Задачи.

 # Задача 1.1
# 1. Создать произвольный список
# 2. Добавить новый элемент типа str в конец списка
# 3. Добавить новый элемент типа int на место с индексом
# 4. Добавить новый элемент типа list в конец списка
# 5. Добавить новый элемент типа tuple на место с индексом
# 6. Получить элемент по индексу
# 7. Удалить элемент
# 8. Найти число повторений элемента списка
lst = [1, 1, 1, 1, 1, 1, 1, 1, 1] #1 создаем список
lst.append('Строка') #2 добавляем элемент типа str в конец списка
lst[3] = 189 #3 вставляем элемент со значением 189 на место с индексом 3
lst.append(['a', 'b', 'a', 'hello']) # добавляем вложенный список
lst[-3] = (1, 6, 89) # вставляем кортеж со значением (1,6,89) на место с индексом -3
print(lst[0]) # получаем значение с индексом 0
print(lst[-1]) # получаем значение с индексом -1
lst.remove(189) # удаляем элемент со значением 189
print(lst.count(1)) # считаем количество элементов в списке со значением 1
print(lst)


# Задача 1.2
# Получение первого и последнего элемента списка
lst_1 = ['Нулевой элемент', 'one', 2, 3, 4, (5, 5, 5)]
print(lst_1)
print(lst_1[0])
print(lst_1[-1])

# Задача 1.3
# Поменяйте значения переменных a, b местами
a = 100
b = 'Строка'
print(a, b)
a, b = b, a
print(a, b)

# Задача 1.4
# Проверить есть ли в последовательности дубликаты
lst_2 = [0, 0, 1, 2, 3, 4, 5, 5, 6, 7] # Создаем список
print(lst_2)
# На основе списка создаем множество st
# Множества не могут содержать дубликаты
st = set(lst_2)
print(st)
# А значит количество элементов в списке и множестве будут отличаться
if len(st) == len(lst_2):
    print(True)
else:
    print(False)

# Задача 1.5
#  1 Создать произвольный словарь
#  2 Добавить новый элемент с ключем типа str и значением типа int
#  3 Добавить новый элемент с ключем типа кортеж(tuple) и значением типа list
#  4 Получить элемент по ключу
#  5 Удалить элемент по ключу
#  6 Получить список ключей словаря
dct = {1 : 'value_1', 2 : 'value_2', 3 : 'value_3'} #1
print(dct)
dct['str_key'] = 12345 # 2
print(dct)
dct[('it', 'is', 'tuple')] = [11, 22, 'list_value', 33, {1, 2, 3}] # 3
print(dct)
item_by_key_v1 = ['str_key'] # 4 способ 1
print(item_by_key_v1)
item_by_key_v2 = dct.get('str_key', 'No item') # 4 способ 2 через функцию get
print(item_by_key_v2)
item_deleted = dct.pop(2, 'No item') # 5
print(dct)
keys = dct.keys()
print(keys)

# Задача 1.6
# Создание множеств
# 1 создать множество
# 2 создать неизменяемое множество(frozenset)
# 3 выполнить операцию объединения созданных множеств
# 4 выполнить операцию пересечения созданных множеств
st = {'it', 'is', 'set', 1} # 1
print(st)
frozen_st = frozenset({'it', 'is', 'frozen', 'set', 2}) # 2
print(frozen_st)
union = st | frozen_st # 3
print(union)
intersection = st & frozen_st # 4
print(intersection)


